# restart_nginx.yml
---
- name: Restarting the Nginx if port 80 is down
  hosts: all
  gather_facts: false
  force_handlers: true
  ignore_unreachable: true 
  tasks:
    - name: Ping the host
      ansible.builtin.ping:
      register: ping_result

    - name: Ping is not successful
      ansible.builtin.debug:
        msg: "{{inventory_hostname}} is not from Ansible Controller...!"
      when: ping_result.unreachable is defined

    - name: Genrate Email content to Send in Email | Server is unreachable
      ansible.builtin.template:
        src: email_alert.html.j2
        dest: /tmp/alert_email.html
      run_once: true  
      delegate_to: 127.0.0.1
      when: ping_result.unreachable is defined

    - name: Email Alert if fail server is unreachable
      when: ping_result.unreachable is defined
      mail:
        host: smtp.gmail.com
        port: 587
        subtype: html
        to:
        - "nrathi@redhat.com"
        subject: "Alert: Host not reachable on SSH {{ inventory_hostname }}"
        body: "{{ lookup('file', '/tmp/alert_email.html') }}"
        username: "dmeonavneet@gmail.com"
        password: "rbfqhoincpyouxqk"
      run_once: true  
      delegate_to: 127.0.0.1
      changed_when: True   

    - name: Firewalld |Open port 80 using firewalld
      ansible.posix.firewalld:
        port: 80/tcp
        permanent: yes
        state: enabled
      notify: Reload firewalld to apply changes
      when: ping_result.unreachable is not defined

    - name: Make sure service is up and running | Nginx service
      ansible.builtin.service:
        name: nginx
        state: started
      become: true
      register: nginx_restart
      when: ping_result.unreachable is not defined

    - ansible.builtin.debug:
        msg: "{{ nginx_restart }}"
      when: ping_result.unreachable is not defined

  handlers:
    - name: Reload firewalld | To apply changes
      ansible.builtin.service:
        name: firewalld
        state: reloaded

###################
#Added this for testing
###################
# ---
# - name: Handle unreachable hosts manually
#   hosts: all
#   gather_facts: no
#   tasks:
#     - name: Attempt to ping the host
#       ansible.builtin.ping:
#       ignore_unreachable: yes
#       register: ping_result

#     - name: Check if host was unreachable
#       ansible.builtin.debug:
#         msg: "Host {{ inventory_hostname }} is unreachable."
#       when: ping_result.unreachable is defined

#     - name: Perform an operation if ping is successful
#       ansible.builtin.shell: echo "Host is reachable {{ inventory_hostname }}"
#       when: ping_result.unreachable is not defined
