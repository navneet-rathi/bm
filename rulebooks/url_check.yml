---
- name: Basic Check webserver
  hosts: all
  sources:
    - ansible.eda.url_check:
        urls:
          - http://192.168.64.40
        delay: 45
    - ansible.eda.alertmanager:
            host: 0.0.0.0
            port: 5050
            data_alerts_path: alerts
            data_host_path: labels.instance
            data_path_separator: .
            skip_original_data: true 
  rules:
    - name: Increment alert count
      condition: event.alert.labels.alertname == "DiskSpaceLow"
      action:
        set_fact:
          alert_key: "{{event.alert.labels.alertname }}_{{ event.alert.labels.mountpoint }}"
          # Build or increment a simple dictionary
          disk_alerts: "{{
            (facts.disk_alerts if facts.disk_alerts is defined else {})
            | combine({ event.alert.labels.alertname_event.alert.labels.mountpoint:
                        (facts.disk_alerts[event.alert.labels.alertname_event.alert.labels.mountpoint]
                         if (facts.disk_alerts is defined and
                             event.alert.labels.alertname_event.alert.labels.mountpoint in facts.disk_alerts)
                         else 0) + 1 })}}"


    - name: DiskSpaceLow -r1
      condition: event.alert.labels.alertname == "DiskSpaceLow" and event.alert.status == "firing" and facts.disk_alerts.event.alert.labels.alertname_event.alert.labels.mountpoint == 1
      action:
        run_job_template:
          name: Apply_disk_cleanup
          organization: Default
          job_args:
            limit: "{{ event.meta.hosts }}"
            extra_vars:
              cleanup: 6
        post_events:
          ruleset: DiskSpaceLow -r2
          event:
            eventcount : 1        

    - name: DiskSpaceLow -r2
      condition: event.alert.labels.alertname == "DiskSpaceLow" and event.alert.status == "firing" and facts.disk_alerts.event.alert.labels.alertname_event.alert.labels.mountpoint == 2
      throttle:
        once_after: 1 minutes
        group_by_attributes:
          - event.meta.hosts
      action:
        run_job_template:
          name: Apply_disk_cleanup
          organization: Default
          job_args:
            limit: "{{ event.meta.hosts }}"
            extra_vars:
              cleanup: 3
        post_events:
          ruleset: DiskSpaceLow -r3
          event:
            eventcount : 2              

    - name: DiskSpaceLow -r3
      condition: event.alert.labels.alertname == "DiskSpaceLow" and event.alert.status == "firing" and facts.disk_alerts.event.alert.labels.alertname_event.alert.labels.mountpoint == 3
      throttle:
        once_after: 1 minutes
        group_by_attributes:
          - event.meta.hosts      
      action:
        run_job_template:
          name: Apply_disk_cleanup
          organization: Default
          job_args:
            limit: "{{ event.meta.hosts }}"
            extra_vars:
              cleanup: 1
        post_events:
          - set_fact:
              eventcount = 3            

    - name: DiskSpaceLow issue and now its fixed
      condition: event.alert.labels.alertname == "DiskSpaceLow" and event.alert.status == "resolved"
      action:
        debug:
          msg: "enabled on: {{ event.meta.hosts }}"
          set_fact:
            disk_alerts: {}
   
    - name: Capture all other events from this source
      condition: event.alert is defined
      action:
        debug: